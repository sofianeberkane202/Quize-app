{"mappings":"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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-135a560282535807.js","src/scripts/controller.js","src/scripts/model.js","src/scripts/config.js","src/scripts/Views/viewQuestion.js","node_modules/@parcel/runtime-js/lib/runtime-69e9dceb3a8072e0.js","src/scripts/Views/timerView.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequiree238\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequiree238\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $90feca6dff670883$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"4uVtf\",\"index.4d90dd34.js\",\"602Ft\",\"icons.38d394c2.svg\"]'));\n\nconst $a60c51a7ac62daa9$export$7fad36b7b4f9ea47 = 120;\nconst $a60c51a7ac62daa9$export$b3f6935f0321a513 = 10;\n\n\nconst $663f86b36bd23175$export$ca000e230c0caa3e = {\n    questions: [],\n    answers: new Map()\n};\n// get quize question\nconst $663f86b36bd23175$var$parsAnswer = function(...answers) {\n    const parser = new DOMParser();\n    const answersAfterparsing = answers.map((answer)=>{\n        const doc = parser.parseFromString(answer, \"text/html\");\n        return doc.documentElement.textContent.trim();\n    });\n    return answersAfterparsing.length === 1 ? answersAfterparsing[0] : answersAfterparsing;\n};\nconst $663f86b36bd23175$export$776e8b60d76bf8c0 = async function() {\n    try {\n        const response = await fetch(`https://opentdb.com/api.php?amount=${(0, $a60c51a7ac62daa9$export$b3f6935f0321a513)}`);\n        console.log(response);\n        if (!response.ok) throw new Error(\"There is a problem Try Again\");\n        const data = await response.json();\n        $663f86b36bd23175$export$ca000e230c0caa3e.questions = data.results.map((result)=>{\n            const correct_answer = Array.isArray(result.correct_answer) ? $663f86b36bd23175$var$parsAnswer(...result.correct_answer) : $663f86b36bd23175$var$parsAnswer(result.correct_answer);\n            const incorrect_answers = $663f86b36bd23175$var$parsAnswer(...result.incorrect_answers);\n            return {\n                category: result.category,\n                correctAnswer: correct_answer,\n                difficulty: result.difficulty,\n                incorrectAnswers: Array.isArray(incorrect_answers) ? incorrect_answers : [\n                    incorrect_answers\n                ],\n                question: result.question,\n                type: result.type\n            };\n        });\n        console.log($663f86b36bd23175$export$ca000e230c0caa3e.questions);\n    } catch (error) {\n        throw error;\n    }\n};\nconst $663f86b36bd23175$export$135f7b3d8e8f29e = function(answerChoosed, questionId) {\n    if (!$663f86b36bd23175$export$ca000e230c0caa3e.answers.has(questionId)) $663f86b36bd23175$export$ca000e230c0caa3e.answers.set(questionId, $663f86b36bd23175$export$ca000e230c0caa3e.answers.get(questionId) || new Map());\n    $663f86b36bd23175$export$ca000e230c0caa3e.answers.get(questionId).set(answerChoosed.id, answerChoosed.answer.trim());\n};\nconst $663f86b36bd23175$export$9f6cab4edb5ccb6e = function(answerChoosed, questionId) {\n    $663f86b36bd23175$export$ca000e230c0caa3e.answers.get(questionId).delete(answerChoosed.id);\n};\nconst $663f86b36bd23175$export$3c325aded05baed9 = function() {\n    $663f86b36bd23175$export$ca000e230c0caa3e.questions.forEach((question, i)=>{});\n};\n\n\nvar $7456ca4dd9006edb$exports = {};\n$7456ca4dd9006edb$exports = new URL(\"icons.38d394c2.svg\", import.meta.url).toString();\n\n\n\n\nclass $2e13a0fef02261b8$var$TimerView {\n    #parentElement = document.querySelector(\".timer\");\n    duration;\n    timer;\n    #conversion(seconds) {\n        const SECONDS_OF_A_MINUTE = 60;\n        const minutes = Math.floor(seconds / SECONDS_OF_A_MINUTE);\n        seconds %= SECONDS_OF_A_MINUTE;\n        return {\n            minutes: minutes,\n            seconds: seconds\n        };\n    }\n    #updateTimerUI(seconds, minutes) {\n        this.#parentElement.querySelector(\"#minutes\").textContent = `${minutes}`.padStart(2, 0);\n        this.#parentElement.querySelector(\"#seconds\").textContent = `${seconds}`.padStart(2, 0);\n    }\n    #timeDown() {\n        this.duration--;\n        const { minutes: minutes, seconds: seconds } = this.#conversion(this.duration);\n        this.#updateTimerUI(seconds, minutes);\n        if (this.duration === 0) {\n            clearInterval(this.timer);\n            (0, $c8b5b4070806e1a0$export$2e2bcd8739ae039).moveToNextQuestion();\n        }\n    }\n    countDown() {\n        this.duration = (0, $a60c51a7ac62daa9$export$7fad36b7b4f9ea47);\n        this.timer = setInterval(this.#timeDown.bind(this), 1000);\n    }\n}\nvar $2e13a0fef02261b8$export$2e2bcd8739ae039 = new $2e13a0fef02261b8$var$TimerView();\n\n\n\nclass $c8b5b4070806e1a0$var$QuestionView {\n    #parentElement = document.querySelector(\".quiz\");\n    #questionsContainer;\n    #data;\n    static currentActiveQuestionContainer = 0;\n    finalScore = 0;\n    #errorMassage = \"There is a problem Try Again\";\n    render(data) {\n        this.#data = data;\n        const markup = this.generateMarkup();\n        this.#parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n        this.#questionsContainer = this.#parentElement.querySelectorAll(\".question-container\");\n    }\n    generateMarkup() {\n        return this.#data.map((question, i)=>{\n            const answers = this.#generateRandomArray([\n                question.correctAnswer,\n                ...question.incorrectAnswers\n            ]);\n            return `\n      <div class=\"question-container ${i === 0 ? \"active\" : \"\"}\" data-id=\"${i}\">\n        <div class=\"question-box\">\n          <h1 class=\"question ${this.#checkNumberCharcterInQuestion(question.question) ? \"small-ft\" : \"\"}\" id=\"question\" >\n            ${question.question}\n          </h1>\n        </div>\n\n        <ul class=\"answers\">\n          ${this.#generateAnswres(answers)}\n        </ul>\n      </div>         \n      `;\n        }).join(\"\");\n    }\n    #generateAnswres(answers) {\n        return answers.map((answer, i)=>{\n            return `\n          <li class=\"answer\" data-id=\"answer${i + 1}\">\n            <svg class=\"icon-unchecked\">\n              <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($7456ca4dd9006edb$exports))}#icon-radio-unchecked\"></use>\n            </svg>\n            <span answer\n              >${answer}</\n            span>\n          </li>\n      `;\n        }).join(\"\");\n    }\n    #generateRandomArray(arr) {\n        for(let i = arr.length - 1; i > 0; i--){\n            const j = Math.floor(Math.random() * (i + 1));\n            [arr[i], arr[j]] = [\n                arr[j],\n                arr[i]\n            ];\n        }\n        return arr;\n    }\n    #checkNumberCharcterInQuestion(question) {\n        if (question.length > 70) return true;\n        return false;\n    }\n    renderError(errorMessage = this.#errorMassage) {\n        const markup = this.#generateErrorMarkup(errorMessage);\n        this.#parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n    }\n    #generateErrorMarkup() {\n        return `\n    <div class=\"error-Message\">\n        <p>\n          There is a problem Try Again\n        </p>\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\n      </div>\n    `;\n    }\n    #moveToNext() {\n        this.#questionsContainer[$c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer].classList.remove(\"active\");\n        $c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer++;\n        this.#questionsContainer[$c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer].classList.add(\"active\");\n    }\n    #moveToPrevious() {\n        this.#questionsContainer[$c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer].classList.remove(\"active\");\n        $c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer--;\n        this.#questionsContainer[$c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer].classList.add(\"active\");\n    }\n    #endoFQuiz(handler) {\n        this.#hidden();\n        handler();\n        this.#renderFinalScore();\n    }\n    moveToNextQuestion() {\n        if ($c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer === this.#questionsContainer.length - 1) {\n            // console.log(\"timer\", timerView.timer);\n            clearInterval((0, $2e13a0fef02261b8$export$2e2bcd8739ae039).timer);\n            // console.log(\"timer was cleared\", timerView.timer);\n            this.#parentElement.querySelector(\".btn-quiz\").querySelectorAll(\".btn\").forEach((btn)=>btn.classList.toggle(\"active\"));\n            return;\n        }\n        this.#moveToNext();\n        (0, $2e13a0fef02261b8$export$2e2bcd8739ae039).countDown();\n        // update question number\n        const questionNumber = this.#parentElement.querySelector(\".questions\").querySelector(\".current-question\");\n        const currentNumber = +questionNumber.textContent;\n        questionNumber.textContent = currentNumber + 1;\n    // console.log(QuestionView.currentActiveQuestionContainer);\n    }\n    addHandlerChooseQuestion(handler) {\n        this.#parentElement.addEventListener(\"click\", (e)=>{\n            // select the answer element\n            const answer = e.target.closest(\".answer\");\n            if (!answer) return;\n            const answerOfAQuestion = answer.querySelector(\"[answer]\").textContent;\n            const questionId = +answer.closest(\".question-container\").dataset.id;\n            answer.querySelector(\"svg\").classList.toggle(\"icon-unchecked\");\n            answer.querySelector(\"svg\").classList.toggle(\"icon-checked\");\n            const use = answer.querySelector(\"svg\").querySelector(\"use\");\n            if (answer.querySelector(\"svg\").classList.contains(\"icon-unchecked\")) {\n                use.setAttribute(\"href\", `${(0, (/*@__PURE__*/$parcel$interopDefault($7456ca4dd9006edb$exports)))}#icon-radio-unchecked`);\n                handler({\n                    answer: answerOfAQuestion,\n                    id: answer.dataset.id\n                }, false, questionId);\n            }\n            if (answer.querySelector(\"svg\").classList.contains(\"icon-checked\")) {\n                use.setAttribute(\"href\", `${(0, (/*@__PURE__*/$parcel$interopDefault($7456ca4dd9006edb$exports)))}#icon-radio-checked`);\n                handler({\n                    answer: answerOfAQuestion,\n                    id: answer.dataset.id\n                }, true, questionId);\n            }\n        });\n    }\n    addHandlerLoadQuestions(handler) {\n        window.addEventListener(\"load\", handler);\n    }\n    addHandlerValidQuestion() {\n        this.#parentElement.addEventListener(\"click\", (e)=>{\n            const btn = e.target.closest(\".explore\");\n            if (!btn) return;\n            // console.log(\"btn is :\", btn);\n            clearInterval((0, $2e13a0fef02261b8$export$2e2bcd8739ae039).timer);\n            this.moveToNextQuestion();\n        });\n    }\n    #hidden() {\n        const btnQuiz = this.#parentElement.querySelector(\".btn-quiz\");\n        const timer = this.#parentElement.querySelector(\".timer\");\n        const questionGaid = this.#parentElement.querySelector(\".questions\");\n        const btnShowResults = this.#parentElement.querySelector(\".show-results-btn\");\n        [\n            btnQuiz,\n            timer,\n            questionGaid\n        ].forEach((btn)=>btn.classList.add(\"hidden\"));\n        btnShowResults.classList.remove(\"hidden\");\n        this.#questionsContainer[$c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer].classList.remove(\"active\");\n    }\n    #display() {\n        $c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer = 0;\n        const questionGaid = this.#parentElement.querySelector(\".questions\");\n        const moveBtn = this.#parentElement.querySelector(\".move-btn\");\n        const btnShowResults = this.#parentElement.querySelector(\".show-results-btn\");\n        const finalResult = this.#parentElement.querySelector(\".final-result\");\n        [\n            questionGaid,\n            moveBtn\n        ].forEach((btn)=>btn.classList.remove(\"hidden\"));\n        [\n            btnShowResults,\n            finalResult\n        ].forEach((ele)=>ele.classList.add(\"hidden\"));\n        moveBtn.querySelector(\".left\").classList.add(\"hidden\");\n        this.#questionsContainer[$c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer].classList.add(\"active\");\n        questionGaid.querySelector(\".current-question\").textContent = $c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer + 1;\n        this.#parentElement.querySelectorAll(\".answer\").forEach((item)=>item.style.pointerEvents = \"none\");\n    }\n    #renderFinalScore() {\n        this.finalScore = this.finalScore * 100 / (0, $a60c51a7ac62daa9$export$b3f6935f0321a513);\n        const finalResult = this.#parentElement.querySelector(\".final-result\");\n        finalResult.querySelector(\".final-score .percentage\").textContent = this.finalScore;\n        console.log(this.finalScore);\n        this.#parentElement.querySelector(\".final-score\").style.background = `conic-gradient(var(--primary-color) 0% ${this.finalScore}%, #f5f5f5 ${this.finalScore}% 100%)`;\n        finalResult.classList.remove(\"hidden\");\n    }\n    renderEvaluation(answers, questionId, question) {\n        // select quetion container by using questionId\n        const questionContent = this.#parentElement.querySelector(`[data-id=\"${questionId}\"]`);\n        questionContent.querySelectorAll(\".answer\").forEach((answer)=>{\n            const answerText = answer.querySelector(\"[answer]\").textContent;\n            // console.log(answerText, question.correctAnswer);\n            if (answerText.trim() === question.correctAnswer) {\n                answer.classList.add(\"true\");\n                answer.querySelector(\"svg\").classList.remove(\"icon-unchecked\");\n                answer.querySelector(\"svg\").classList.add(\"icon-checked\");\n                answer.querySelector(\"svg\").querySelector(\"use\").setAttribute(\"href\", `${(0, (/*@__PURE__*/$parcel$interopDefault($7456ca4dd9006edb$exports)))}#icon-radio-checked`);\n            }\n        });\n        answers.forEach((answer, answerId)=>{\n            if (answer !== question.correctAnswer) questionContent.querySelector(`[data-id=\"${answerId}\"]`).classList.add(\"false\");\n            if (answer === question.correctAnswer) this.finalScore += 1;\n        });\n    }\n    addHandlerEndQuiz(handler) {\n        this.#parentElement.querySelector(\".end-of-quiz\").addEventListener(\"click\", ()=>{\n            this.#endoFQuiz(handler);\n        });\n    }\n    addHandlerShowResults() {\n        this.#parentElement.querySelector(\".show-results-btn\").addEventListener(\"click\", ()=>{\n            this.#display();\n        });\n    }\n    addHandlerMoveBetweenQuestions() {\n        this.#parentElement.addEventListener(\"click\", (e)=>{\n            const btn = e.target.closest(\".btn\");\n            if (!btn) return;\n            const currentQuestion = this.#parentElement.querySelector(\".questions\").querySelector(\".current-question\");\n            if (btn.classList.contains(\"left\")) {\n                this.#moveToPrevious();\n                currentQuestion.textContent = $c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer + 1;\n                if ($c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer === 0) {\n                    btn.classList.add(\"hidden\");\n                    return;\n                }\n            }\n            if (btn.classList.contains(\"right\")) {\n                this.#moveToNext();\n                currentQuestion.textContent = $c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer + 1;\n                if ($c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer === this.#questionsContainer.length - 1) {\n                    btn.classList.add(\"hidden\");\n                    return;\n                }\n            }\n            if ($c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer > 0 && $c8b5b4070806e1a0$var$QuestionView.currentActiveQuestionContainer < this.#questionsContainer.length - 1) this.#parentElement.querySelector(\".move-btn\").querySelectorAll(\".btn\").forEach((btn)=>btn.classList.remove(\"hidden\"));\n        });\n    }\n}\nvar $c8b5b4070806e1a0$export$2e2bcd8739ae039 = new $c8b5b4070806e1a0$var$QuestionView();\n\n\n\nconst $263973c9c5948862$var$controllerQuestions = async function() {\n    try {\n        await $663f86b36bd23175$export$776e8b60d76bf8c0();\n        (0, $c8b5b4070806e1a0$export$2e2bcd8739ae039).render($663f86b36bd23175$export$ca000e230c0caa3e.questions);\n        (0, $2e13a0fef02261b8$export$2e2bcd8739ae039).countDown();\n    } catch (error) {\n        (0, $c8b5b4070806e1a0$export$2e2bcd8739ae039).renderError(error);\n    }\n};\nconst $263973c9c5948862$var$controlerAnswer = function(answerChoosed, isChecked, QuestionID) {\n    isChecked ? $663f86b36bd23175$export$135f7b3d8e8f29e(answerChoosed, QuestionID) : $663f86b36bd23175$export$9f6cab4edb5ccb6e(answerChoosed, QuestionID);\n// console.log(model.state.answers);\n};\nconst $263973c9c5948862$var$controllerEvaluation = function() {\n    $663f86b36bd23175$export$ca000e230c0caa3e.answers.forEach((answer, questionId)=>{\n        (0, $c8b5b4070806e1a0$export$2e2bcd8739ae039).renderEvaluation(answer, questionId, $663f86b36bd23175$export$ca000e230c0caa3e.questions[questionId]);\n    });\n};\nconst $263973c9c5948862$var$init = function() {\n    // load event :\n    (0, $c8b5b4070806e1a0$export$2e2bcd8739ae039).addHandlerLoadQuestions($263973c9c5948862$var$controllerQuestions);\n    // --------------------\n    (0, $c8b5b4070806e1a0$export$2e2bcd8739ae039).addHandlerChooseQuestion($263973c9c5948862$var$controlerAnswer);\n    (0, $c8b5b4070806e1a0$export$2e2bcd8739ae039).addHandlerValidQuestion();\n    (0, $c8b5b4070806e1a0$export$2e2bcd8739ae039).addHandlerEndQuiz($263973c9c5948862$var$controllerEvaluation);\n    (0, $c8b5b4070806e1a0$export$2e2bcd8739ae039).addHandlerShowResults();\n    (0, $c8b5b4070806e1a0$export$2e2bcd8739ae039).addHandlerMoveBetweenQuestions();\n};\n$263973c9c5948862$var$init();\n\n\n//# sourceMappingURL=index.4d90dd34.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"4uVtf\\\",\\\"index.4d90dd34.js\\\",\\\"602Ft\\\",\\\"icons.38d394c2.svg\\\"]\"));","import \"./model\";\nimport * as model from \"./model\";\nimport viewQuestion from \"./Views/viewQuestion\";\nimport timerView from \"./Views/timerView\";\n\nconst controllerQuestions = async function () {\n  try {\n    await model.getQuizQuestions();\n    viewQuestion.render(model.state.questions);\n    timerView.countDown();\n  } catch (error) {\n    viewQuestion.renderError(error);\n  }\n};\n\nconst controlerAnswer = function (answerChoosed, isChecked, QuestionID) {\n  isChecked\n    ? model.setAnswerChoosed(answerChoosed, QuestionID)\n    : model.removeAnswerChoosed(answerChoosed, QuestionID);\n\n  // console.log(model.state.answers);\n};\n\nconst controllerEvaluation = function () {\n  model.state.answers.forEach((answer, questionId) => {\n    viewQuestion.renderEvaluation(\n      answer,\n      questionId,\n      model.state.questions[questionId]\n    );\n  });\n};\n\nconst init = function () {\n  // load event :\n  viewQuestion.addHandlerLoadQuestions(controllerQuestions);\n  // --------------------\n  viewQuestion.addHandlerChooseQuestion(controlerAnswer);\n  viewQuestion.addHandlerValidQuestion();\n  viewQuestion.addHandlerEndQuiz(controllerEvaluation);\n  viewQuestion.addHandlerShowResults();\n  viewQuestion.addHandlerMoveBetweenQuestions();\n};\n\ninit();\n","import { NUMBER_OF_QUESTION } from \"./config\";\nexport const state = {\n  questions: [],\n  answers: new Map(),\n};\n\n// get quize question\n\nconst parsAnswer = function (...answers) {\n  const parser = new DOMParser();\n  const answersAfterparsing = answers.map((answer) => {\n    const doc = parser.parseFromString(answer, \"text/html\");\n    return doc.documentElement.textContent.trim();\n  });\n\n  return answersAfterparsing.length === 1\n    ? answersAfterparsing[0]\n    : answersAfterparsing;\n};\n\nexport const getQuizQuestions = async function () {\n  try {\n    const response = await fetch(\n      `https://opentdb.com/api.php?amount=${NUMBER_OF_QUESTION}`\n    );\n\n    console.log(response);\n    if (!response.ok) throw new Error(\"There is a problem Try Again\");\n    const data = await response.json();\n\n    state.questions = data.results.map((result) => {\n      const correct_answer = Array.isArray(result.correct_answer)\n        ? parsAnswer(...result.correct_answer)\n        : parsAnswer(result.correct_answer);\n\n      const incorrect_answers = parsAnswer(...result.incorrect_answers);\n      return {\n        category: result.category,\n        correctAnswer: correct_answer,\n        difficulty: result.difficulty,\n        incorrectAnswers: Array.isArray(incorrect_answers)\n          ? incorrect_answers\n          : [incorrect_answers],\n        question: result.question,\n        type: result.type,\n      };\n    });\n    console.log(state.questions);\n  } catch (error) {\n    throw error;\n  }\n};\n\n// getQuizQuestions();\n\nexport const setAnswerChoosed = function (answerChoosed, questionId) {\n  if (!state.answers.has(questionId)) {\n    state.answers.set(questionId, state.answers.get(questionId) || new Map());\n  }\n\n  state.answers\n    .get(questionId)\n    .set(answerChoosed.id, answerChoosed.answer.trim());\n};\n\nexport const removeAnswerChoosed = function (answerChoosed, questionId) {\n  state.answers.get(questionId).delete(answerChoosed.id);\n};\n\nexport const evaluation = function () {\n  state.questions.forEach((question, i) => {});\n};\n","const QUESTION_DURATION = 120;\nconst NUMBER_OF_QUESTION = 10;\nexport { QUESTION_DURATION, NUMBER_OF_QUESTION };\n","import icons from \"url:../../../src/images/icons.svg\";\nimport timerView from \"./timerView\";\nimport { NUMBER_OF_QUESTION } from \"../config\";\nclass QuestionView {\n  #parentElement = document.querySelector(\".quiz\");\n  #questionsContainer;\n  #data;\n  static currentActiveQuestionContainer = 0;\n  finalScore = 0;\n\n  #errorMassage = \"There is a problem Try Again\";\n\n  render(data) {\n    this.#data = data;\n    const markup = this.generateMarkup();\n    this.#parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n    this.#questionsContainer = this.#parentElement.querySelectorAll(\n      \".question-container\"\n    );\n  }\n\n  generateMarkup() {\n    return this.#data\n      .map((question, i) => {\n        const answers = this.#generateRandomArray([\n          question.correctAnswer,\n          ...question.incorrectAnswers,\n        ]);\n\n        return `\n      <div class=\"question-container ${i === 0 ? \"active\" : \"\"}\" data-id=\"${i}\">\n        <div class=\"question-box\">\n          <h1 class=\"question ${\n            this.#checkNumberCharcterInQuestion(question.question)\n              ? \"small-ft\"\n              : \"\"\n          }\" id=\"question\" >\n            ${question.question}\n          </h1>\n        </div>\n\n        <ul class=\"answers\">\n          ${this.#generateAnswres(answers)}\n        </ul>\n      </div>         \n      `;\n      })\n      .join(\"\");\n  }\n\n  #generateAnswres(answers) {\n    return answers\n      .map((answer, i) => {\n        return `\n          <li class=\"answer\" data-id=\"answer${i + 1}\">\n            <svg class=\"icon-unchecked\">\n              <use href=\"${icons}#icon-radio-unchecked\"></use>\n            </svg>\n            <span answer\n              >${answer}</\n            span>\n          </li>\n      `;\n      })\n      .join(\"\");\n  }\n\n  #generateRandomArray(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n\n  #checkNumberCharcterInQuestion(question) {\n    if (question.length > 70) return true;\n    return false;\n  }\n\n  renderError(errorMessage = this.#errorMassage) {\n    const markup = this.#generateErrorMarkup(errorMessage);\n    this.#parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n  }\n\n  #generateErrorMarkup() {\n    return `\n    <div class=\"error-Message\">\n        <p>\n          There is a problem Try Again\n        </p>\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\n      </div>\n    `;\n  }\n\n  #moveToNext() {\n    this.#questionsContainer[\n      QuestionView.currentActiveQuestionContainer\n    ].classList.remove(\"active\");\n\n    QuestionView.currentActiveQuestionContainer++;\n\n    this.#questionsContainer[\n      QuestionView.currentActiveQuestionContainer\n    ].classList.add(\"active\");\n  }\n\n  #moveToPrevious() {\n    this.#questionsContainer[\n      QuestionView.currentActiveQuestionContainer\n    ].classList.remove(\"active\");\n\n    QuestionView.currentActiveQuestionContainer--;\n\n    this.#questionsContainer[\n      QuestionView.currentActiveQuestionContainer\n    ].classList.add(\"active\");\n  }\n\n  #endoFQuiz(handler) {\n    this.#hidden();\n    handler();\n    this.#renderFinalScore();\n  }\n\n  moveToNextQuestion() {\n    if (\n      QuestionView.currentActiveQuestionContainer ===\n      this.#questionsContainer.length - 1\n    ) {\n      // console.log(\"timer\", timerView.timer);\n      clearInterval(timerView.timer);\n      // console.log(\"timer was cleared\", timerView.timer);\n\n      this.#parentElement\n        .querySelector(\".btn-quiz\")\n        .querySelectorAll(\".btn\")\n        .forEach((btn) => btn.classList.toggle(\"active\"));\n\n      return;\n    }\n\n    this.#moveToNext();\n\n    timerView.countDown();\n\n    // update question number\n    const questionNumber = this.#parentElement\n      .querySelector(\".questions\")\n      .querySelector(\".current-question\");\n\n    const currentNumber = +questionNumber.textContent;\n    questionNumber.textContent = currentNumber + 1;\n\n    // console.log(QuestionView.currentActiveQuestionContainer);\n  }\n\n  addHandlerChooseQuestion(handler) {\n    this.#parentElement.addEventListener(\"click\", (e) => {\n      // select the answer element\n      const answer = e.target.closest(\".answer\");\n      if (!answer) return;\n\n      const answerOfAQuestion = answer.querySelector(\"[answer]\").textContent;\n      const questionId = +answer.closest(\".question-container\").dataset.id;\n\n      answer.querySelector(\"svg\").classList.toggle(\"icon-unchecked\");\n      answer.querySelector(\"svg\").classList.toggle(\"icon-checked\");\n\n      const use = answer.querySelector(\"svg\").querySelector(\"use\");\n\n      if (answer.querySelector(\"svg\").classList.contains(\"icon-unchecked\")) {\n        use.setAttribute(\"href\", `${icons}#icon-radio-unchecked`);\n        handler(\n          { answer: answerOfAQuestion, id: answer.dataset.id },\n          false,\n          questionId\n        );\n      }\n\n      if (answer.querySelector(\"svg\").classList.contains(\"icon-checked\")) {\n        use.setAttribute(\"href\", `${icons}#icon-radio-checked`);\n        handler(\n          { answer: answerOfAQuestion, id: answer.dataset.id },\n          true,\n          questionId\n        );\n      }\n    });\n  }\n\n  addHandlerLoadQuestions(handler) {\n    window.addEventListener(\"load\", handler);\n  }\n\n  addHandlerValidQuestion() {\n    this.#parentElement.addEventListener(\"click\", (e) => {\n      const btn = e.target.closest(\".explore\");\n      if (!btn) return;\n      // console.log(\"btn is :\", btn);\n\n      clearInterval(timerView.timer);\n      this.moveToNextQuestion();\n    });\n  }\n\n  #hidden() {\n    const btnQuiz = this.#parentElement.querySelector(\".btn-quiz\");\n    const timer = this.#parentElement.querySelector(\".timer\");\n    const questionGaid = this.#parentElement.querySelector(\".questions\");\n    const btnShowResults =\n      this.#parentElement.querySelector(\".show-results-btn\");\n\n    [btnQuiz, timer, questionGaid].forEach((btn) =>\n      btn.classList.add(\"hidden\")\n    );\n    btnShowResults.classList.remove(\"hidden\");\n\n    this.#questionsContainer[\n      QuestionView.currentActiveQuestionContainer\n    ].classList.remove(\"active\");\n  }\n\n  #display() {\n    QuestionView.currentActiveQuestionContainer = 0;\n    const questionGaid = this.#parentElement.querySelector(\".questions\");\n    const moveBtn = this.#parentElement.querySelector(\".move-btn\");\n    const btnShowResults =\n      this.#parentElement.querySelector(\".show-results-btn\");\n    const finalResult = this.#parentElement.querySelector(\".final-result\");\n\n    [questionGaid, moveBtn].forEach((btn) => btn.classList.remove(\"hidden\"));\n\n    [btnShowResults, finalResult].forEach((ele) => ele.classList.add(\"hidden\"));\n\n    moveBtn.querySelector(\".left\").classList.add(\"hidden\");\n\n    this.#questionsContainer[\n      QuestionView.currentActiveQuestionContainer\n    ].classList.add(\"active\");\n\n    questionGaid.querySelector(\".current-question\").textContent =\n      QuestionView.currentActiveQuestionContainer + 1;\n\n    this.#parentElement\n      .querySelectorAll(\".answer\")\n      .forEach((item) => (item.style.pointerEvents = \"none\"));\n  }\n\n  #renderFinalScore() {\n    this.finalScore = (this.finalScore * 100) / NUMBER_OF_QUESTION;\n    const finalResult = this.#parentElement.querySelector(\".final-result\");\n    finalResult.querySelector(\".final-score .percentage\").textContent =\n      this.finalScore;\n\n    console.log(this.finalScore);\n\n    this.#parentElement.querySelector(\n      \".final-score\"\n    ).style.background = `conic-gradient(var(--primary-color) 0% ${this.finalScore}%, #f5f5f5 ${this.finalScore}% 100%)`;\n    finalResult.classList.remove(\"hidden\");\n  }\n\n  renderEvaluation(answers, questionId, question) {\n    // select quetion container by using questionId\n    const questionContent = this.#parentElement.querySelector(\n      `[data-id=\"${questionId}\"]`\n    );\n\n    questionContent.querySelectorAll(\".answer\").forEach((answer) => {\n      const answerText = answer.querySelector(\"[answer]\").textContent;\n\n      // console.log(answerText, question.correctAnswer);\n      if (answerText.trim() === question.correctAnswer) {\n        answer.classList.add(\"true\");\n        answer.querySelector(\"svg\").classList.remove(\"icon-unchecked\");\n        answer.querySelector(\"svg\").classList.add(\"icon-checked\");\n        answer\n          .querySelector(\"svg\")\n          .querySelector(\"use\")\n          .setAttribute(\"href\", `${icons}#icon-radio-checked`);\n      }\n    });\n\n    answers.forEach((answer, answerId) => {\n      if (answer !== question.correctAnswer)\n        questionContent\n          .querySelector(`[data-id=\"${answerId}\"]`)\n          .classList.add(\"false\");\n\n      if (answer === question.correctAnswer) {\n        this.finalScore += 1;\n      }\n    });\n  }\n\n  addHandlerEndQuiz(handler) {\n    this.#parentElement\n      .querySelector(\".end-of-quiz\")\n      .addEventListener(\"click\", () => {\n        this.#endoFQuiz(handler);\n      });\n  }\n\n  addHandlerShowResults() {\n    this.#parentElement\n      .querySelector(\".show-results-btn\")\n      .addEventListener(\"click\", () => {\n        this.#display();\n      });\n  }\n\n  addHandlerMoveBetweenQuestions() {\n    this.#parentElement.addEventListener(\"click\", (e) => {\n      const btn = e.target.closest(\".btn\");\n      if (!btn) return;\n\n      const currentQuestion = this.#parentElement\n        .querySelector(\".questions\")\n        .querySelector(\".current-question\");\n\n      if (btn.classList.contains(\"left\")) {\n        this.#moveToPrevious();\n\n        currentQuestion.textContent =\n          QuestionView.currentActiveQuestionContainer + 1;\n\n        if (QuestionView.currentActiveQuestionContainer === 0) {\n          btn.classList.add(\"hidden\");\n          return;\n        }\n      }\n\n      if (btn.classList.contains(\"right\")) {\n        this.#moveToNext();\n\n        currentQuestion.textContent =\n          QuestionView.currentActiveQuestionContainer + 1;\n\n        if (\n          QuestionView.currentActiveQuestionContainer ===\n          this.#questionsContainer.length - 1\n        ) {\n          btn.classList.add(\"hidden\");\n          return;\n        }\n      }\n\n      if (\n        QuestionView.currentActiveQuestionContainer > 0 &&\n        QuestionView.currentActiveQuestionContainer <\n          this.#questionsContainer.length - 1\n      ) {\n        this.#parentElement\n          .querySelector(\".move-btn\")\n          .querySelectorAll(\".btn\")\n          .forEach((btn) => btn.classList.remove(\"hidden\"));\n      }\n    });\n  }\n}\n\nexport default new QuestionView();\n","module.exports = new __parcel__URL__(\"icons.38d394c2.svg\").toString();","import { QUESTION_DURATION } from \"../config\";\nimport viewQuestion from \"./viewQuestion\";\nclass TimerView {\n  #parentElement = document.querySelector(\".timer\");\n  duration;\n  timer;\n\n  #conversion(seconds) {\n    const SECONDS_OF_A_MINUTE = 60;\n    const minutes = Math.floor(seconds / SECONDS_OF_A_MINUTE);\n    seconds %= SECONDS_OF_A_MINUTE;\n\n    return { minutes, seconds };\n  }\n\n  #updateTimerUI(seconds, minutes) {\n    this.#parentElement.querySelector(\"#minutes\").textContent =\n      `${minutes}`.padStart(2, 0);\n    this.#parentElement.querySelector(\"#seconds\").textContent =\n      `${seconds}`.padStart(2, 0);\n  }\n\n  #timeDown() {\n    this.duration--;\n    const { minutes, seconds } = this.#conversion(this.duration);\n    this.#updateTimerUI(seconds, minutes);\n\n    if (this.duration === 0) {\n      clearInterval(this.timer);\n      viewQuestion.moveToNextQuestion();\n    }\n  }\n\n  countDown() {\n    this.duration = QUESTION_DURATION;\n    this.timer = setInterval(this.#timeDown.bind(this), 1000);\n  }\n}\n\nexport default new TimerView();\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$663f86b36bd23175$export$ca000e230c0caa3e","questions","answers","$663f86b36bd23175$var$parsAnswer","parser","DOMParser","answersAfterparsing","map","answer","doc","parseFromString","documentElement","textContent","trim","$663f86b36bd23175$export$776e8b60d76bf8c0","response","fetch","console","log","ok","data","json","results","result","correct_answer","Array","isArray","incorrect_answers","category","correctAnswer","difficulty","incorrectAnswers","question","type","error","$663f86b36bd23175$export$135f7b3d8e8f29e","answerChoosed","questionId","has","$663f86b36bd23175$export$9f6cab4edb5ccb6e","delete","$7456ca4dd9006edb$exports","$2e13a0fef02261b8$var$TimerView","document","querySelector","duration","timer","seconds","minutes","Math","floor","padStart","clearInterval","moveToNextQuestion","countDown","setInterval","bind","$2e13a0fef02261b8$export$2e2bcd8739ae039","$c8b5b4070806e1a0$var$QuestionView","currentActiveQuestionContainer","finalScore","render","markup","generateMarkup","insertAdjacentHTML","querySelectorAll","join","arr","j","random","renderError","errorMessage","classList","remove","add","handler","forEach","btn","toggle","questionNumber","currentNumber","addHandlerChooseQuestion","addEventListener","e","target","closest","answerOfAQuestion","dataset","use","contains","setAttribute","addHandlerLoadQuestions","window","addHandlerValidQuestion","btnQuiz","questionGaid","btnShowResults","moveBtn","finalResult","ele","item","style","pointerEvents","background","renderEvaluation","questionContent","answerText","answerId","addHandlerEndQuiz","addHandlerShowResults","addHandlerMoveBetweenQuestions","currentQuestion","$c8b5b4070806e1a0$export$2e2bcd8739ae039","$263973c9c5948862$var$controllerQuestions","isChecked","QuestionID"],"version":3,"file":"index.4d90dd34.js.map"}